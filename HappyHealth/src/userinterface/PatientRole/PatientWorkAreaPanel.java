/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.InHomePatient.InHomePatient;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.List;
import javax.swing.JPanel;

/**
 *
 * @author ikyathvarmadantuluri
 */
public class PatientWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form PatientWorkAreaPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Network network;
    private UserAccount userAccount;
    private InHomePatient inHomePatient;
    private EcoSystem system;
    
public PatientWorkAreaPanel(JPanel userProcessContainer,InHomePatient inHomePatient, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.system=system;
        this.inHomePatient=inHomePatient;
        populateComboBox();
        
       
        
                       

        //To change body of generated methods, choose Tools | Templates.
    }

    private void populateComboBox() {
        networkComboBox.removeAllItems();
        enterpriseTypeComboBox.removeAllItems();

        for (Network network : system.getNetworkList()) {
            networkComboBox.addItem(network);
        }

//        for (Enterprise.EnterpriseType type : Enterprise.EnterpriseType.values()) {
//            enterpriseTypeComboBox.addItem(type);
//        }
       
//        List<Object> list = new List<Object>() {};
//        for (object o in enterpriseTypeComboBox.Items)
//        {
//        if (!list.Contains(o))
//            {
//            list.Add(o);
//            }
//        }
//        enterpriseTypeComboBox.Items.Clear();
//        enterpriseTypeComboBox.Items.AddRange(list.ToArray());

    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBack = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        networkComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        enterpriseTypeComboBox = new javax.swing.JComboBox();
        submitReqBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setLayout(null);

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Back.PNG"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(12, 13, 62, 62);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Select City :");
        add(jLabel5);
        jLabel5.setBounds(104, 179, 127, 20);

        networkComboBox.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        networkComboBox.setForeground(new java.awt.Color(0, 102, 102));
        networkComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkComboBoxActionPerformed(evt);
            }
        });
        add(networkComboBox);
        networkComboBox.setBounds(267, 176, 200, 27);

        jLabel6.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Request for :");
        add(jLabel6);
        jLabel6.setBounds(104, 262, 127, 20);

        enterpriseTypeComboBox.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        enterpriseTypeComboBox.setForeground(new java.awt.Color(0, 102, 102));
        enterpriseTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        enterpriseTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterpriseTypeComboBoxActionPerformed(evt);
            }
        });
        add(enterpriseTypeComboBox);
        enterpriseTypeComboBox.setBounds(267, 259, 200, 27);

        submitReqBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        submitReqBtn.setText("Schedule/View Appointments");
        submitReqBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitReqBtnActionPerformed(evt);
            }
        });
        add(submitReqBtn);
        submitReqBtn.setBounds(591, 176, 270, 87);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Appointments");
        add(jLabel1);
        jLabel1.setBounds(456, 44, 247, 31);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Health Services.png"))); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(0, 0, 1600, 1200);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed
    private void populateEnterpriseComboBox(Network network) {
        enterpriseTypeComboBox.removeAllItems();

        for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseTypeComboBox.addItem(ent);
        

    }
    }
    private void networkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkComboBoxActionPerformed
        // TODO add your handling code here:
        network = (Network) networkComboBox.getSelectedItem();
        if (network != null) {
            populateEnterpriseComboBox(network);
        }
    }//GEN-LAST:event_networkComboBoxActionPerformed
    
    
    private void enterpriseTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterpriseTypeComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterpriseTypeComboBoxActionPerformed

    private void submitReqBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitReqBtnActionPerformed
        // TODO add your handling code here:
        //Enterprise enterprise = (Enterprise) enterpriseComboBox.getSelectedItem();
        Enterprise type = (Enterprise) enterpriseTypeComboBox.getSelectedItem();
        if (type.getEnterpriseType().getValue().equalsIgnoreCase("Hospital")){
                RequestForDoctorJPanel docReqPanel = new RequestForDoctorJPanel(userProcessContainer, type, network, inHomePatient,system);
                userProcessContainer.add("RequestForDoctorJPanel", docReqPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
            }
            else if (type.getEnterpriseType().getValue().equalsIgnoreCase("Pharmacy")){
                RequestForPharmacyJPanel pharmacyReqPanel = new RequestForPharmacyJPanel(userProcessContainer, type, network, inHomePatient, system);
                userProcessContainer.add("RequestForPharmacyJPanel", pharmacyReqPanel);
                CardLayout layout = (CardLayout) userProcessContainer.getLayout();
                layout.next(userProcessContainer);
        }
            
    }//GEN-LAST:event_submitReqBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox enterpriseTypeComboBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JComboBox networkComboBox;
    private javax.swing.JButton submitReqBtn;
    // End of variables declaration//GEN-END:variables
}
