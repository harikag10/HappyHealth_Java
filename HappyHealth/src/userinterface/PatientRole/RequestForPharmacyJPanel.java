/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PatientRole;

import Business.EcoSystem;

import Business.Enterprise.Enterprise;

import Business.InHomePatient.InHomePatient;
import Business.Network.Network;

import Business.WorkQueue.PharmacyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Harika
 */
public class RequestForPharmacyJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RequestForPharmacyJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Network network;
    private InHomePatient inHomePatient;
    private EcoSystem system;
    public RequestForPharmacyJPanel(JPanel userProcessContainer, Enterprise enterprise, Network network, InHomePatient inHomePatient, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.network = network;
        this.inHomePatient = inHomePatient;
        this.system = system;
        populateRequestTable();
    }
    
        public void populateRequestTable() {
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();

        model.setRowCount(0);
        
        for (WorkRequest request : system.getWorkQueue().getWorkRequestList()) {
            if(request!=null && request.getInhomepatient()!=null){
            if (request instanceof PharmacyWorkRequest && request.getInhomepatient().getPatientName().equalsIgnoreCase(inHomePatient.getPatientName()) && request.getEnterprise().getEnterpriseType().getValue()==enterprise.getEnterpriseType().getValue()&& network.getName().equalsIgnoreCase(request.getCity())) {
                Object[] row = new Object[6];
                row[0] = ((PharmacyWorkRequest) request);
                row[1] = ((PharmacyWorkRequest) request).getDrugQuantity();
                row[2] = ((PharmacyWorkRequest) request).getRequestDate();
                row[3] = ((PharmacyWorkRequest) request).getResolveDate();
                row[4] = ((PharmacyWorkRequest) request).getExpectedDeliveryDate();
                row[5] = ((PharmacyWorkRequest) request).getFollow();
                /* String result = ((StaffWorkRequest) request).getTestResult();
                 row[3] = result == null ? "Waiting" : result;
                 */
                model.addRow(row);
            }
            }
            
    }}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDrugName = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        SubmitButton = new javax.swing.JButton();
        enterpriseLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        txtDrugQuantity = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setLayout(null);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Drug Quantity*:");
        add(jLabel2);
        jLabel2.setBounds(100, 570, 150, 20);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Drug name*:");
        add(jLabel3);
        jLabel3.setBounds(100, 530, 130, 20);

        txtDrugName.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        txtDrugName.setForeground(new java.awt.Color(0, 102, 102));
        txtDrugName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDrugNameActionPerformed(evt);
            }
        });
        add(txtDrugName);
        txtDrugName.setBounds(280, 520, 111, 30);

        backBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        backBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Back.PNG"))); // NOI18N
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn);
        backBtn.setBounds(12, 13, 64, 59);

        SubmitButton.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        SubmitButton.setForeground(new java.awt.Color(0, 102, 102));
        SubmitButton.setText("Submit Request");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });
        add(SubmitButton);
        SubmitButton.setBounds(170, 650, 152, 29);

        enterpriseLabel1.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        enterpriseLabel1.setForeground(new java.awt.Color(0, 102, 102));
        enterpriseLabel1.setText("Request for Medicines");
        add(enterpriseLabel1);
        enterpriseLabel1.setBounds(370, 20, 450, 80);

        workRequestJTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        workRequestJTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Drug Name", "Drug Quantity", "Requested Date", "Accepted Date", "Expected Delivery Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(100, 380, 980, 110);

        txtDrugQuantity.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        txtDrugQuantity.setForeground(new java.awt.Color(0, 102, 102));
        add(txtDrugQuantity);
        txtDrugQuantity.setBounds(280, 560, 111, 30);

        btnCancel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(0, 102, 102));
        btnCancel.setText("Cancel Request");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        add(btnCancel);
        btnCancel.setBounds(170, 700, 140, 29);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/pharmacy.jpg"))); // NOI18N
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1600, 1200);
    }// </editor-fold>//GEN-END:initComponents

    private void txtDrugNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDrugNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDrugNameActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        //Date reqDate = RequestingDateTextField.getDate();
        
        
        int drugQuantity;

        try{
            drugQuantity = Integer.parseInt(txtDrugQuantity.getText());
            
        }catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null, "Quantity can only be numeric");

            return;
        }
        
        String mess = txtDrugName.getText();
        
        if (mess.equalsIgnoreCase("") || txtDrugQuantity.getText().equalsIgnoreCase("")) {

            JOptionPane.showMessageDialog(null, "Please enter both the mandatory fields");
        } else if (drugQuantity <= 0) {

            JOptionPane.showMessageDialog(null, "Quantity should be greater than 0! ");
        } else
        
         {
            PharmacyWorkRequest request = new PharmacyWorkRequest();
//            request.setRequestingDate(reqDate);
//            request.setdoctorName(null);
            request.setInhomepatient(inHomePatient);
            request.setSender(inHomePatient);
            request.setDrugQuantity(drugQuantity);
            request.setDrugName(mess);
            request.setExpectedDeliveryDate(null);
            request.setRequestDate(new Date());
            request.setResolveDate(null);
            request.setStatus("Requested");
            request.setCity(network.getName());
            //request.setMessage(mess);
            request.setEnterprise(enterprise);
            System.out.println(enterprise);
            request.setActiveLead("Pharmacist");

            //            Enterprise ent = null;
            //            for (Network network1:system.getNetworkList()){
                //
                //                if(network1==network){
                    //                for (Enterprise enterprise : network1.getEnterpriseDirectory().getEnterpriseList()) {
                        //                    if (enterprise instanceof HospitalEnterprise ) {
                            //                        ent = enterprise;
                            //                        break;
                            //                    }
                        //                }
                    //            if (ent != null) {
            system.getWorkQueue().getWorkRequestList().add(request);
            populateRequestTable();
//            System.out.println("Req"+request.ge);
                        //System.out.println(userAccount.getWorkQueue().getWorkRequestList().get(0).toString());
                        //System.out.println(userAccount.getWorkQueue().getWorkRequestList().get(1).toString());

 }

                    //RequestingDateTextField.setDate(null);
            txtDrugName.setText("");
            txtDrugQuantity.setText("");
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if(row>=0){
        WorkRequest request = (WorkRequest) workRequestJTable.getValueAt(row,0);
        system.getWorkQueue().getWorkRequestList().remove(request);
        populateRequestTable();
        }
        else if(row<0){
            JOptionPane.showMessageDialog(null, "Please select a row from table","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCancelActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton SubmitButton;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnCancel;
    private javax.swing.JLabel enterpriseLabel1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtDrugName;
    private javax.swing.JTextField txtDrugQuantity;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
