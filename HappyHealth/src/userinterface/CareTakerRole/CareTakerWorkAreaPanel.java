/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CareTakerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.CareTakerOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DeliveryWorkRequest;
import Business.WorkQueue.DoctorByHospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mounica Dantuluri
 */
public class CareTakerWorkAreaPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private CareTakerOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;

    /**
     * Creates new form CareTakerWorkAreaPanel
     */
    public CareTakerWorkAreaPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem system) {
         initComponents();

        this.userProcessContainer = userProcessContainer;
        this.organization = (CareTakerOrganization) organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.system = system;
        
       labelValue.setText(userAccount.toString());
       
       populateRequestTable();
    }
            public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tableCaretakerWorkArea.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest request : system.getWorkQueue().getWorkRequestList()){
            if(enterprise.getEnterpriseType().getValue()==request.getEnterprise().getEnterpriseType().getValue() && request.getActiveLead().equalsIgnoreCase("Caretaker")){
            Object[] row = new Object[7];
            row[0] = request;
            row[1] = request.getInhomepatient().getPatientName();
            row[2] = request.getRequestDate();
            row[3] = request.getResolveDate();
            row[4] = request.getStatus();
            row[5] = request.getFollow();
            row[6] = request.getInhomepatient().getAddress();
           /* String result = ((StaffWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            */
            model.addRow(row);
            }
        
    }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaComments = new javax.swing.JTextArea();
        btnAcceptRequest = new javax.swing.JButton();
        labelEnterprise = new javax.swing.JLabel();
        labelValue = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCaretakerWorkArea = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setLayout(null);

        txtAreaComments.setColumns(20);
        txtAreaComments.setRows(5);
        jScrollPane2.setViewportView(txtAreaComments);

        add(jScrollPane2);
        jScrollPane2.setBounds(500, 670, 248, 69);

        btnAcceptRequest.setBackground(new java.awt.Color(0, 102, 102));
        btnAcceptRequest.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAcceptRequest.setForeground(new java.awt.Color(0, 102, 102));
        btnAcceptRequest.setText("Accept Request");
        btnAcceptRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAcceptRequestActionPerformed(evt);
            }
        });
        add(btnAcceptRequest);
        btnAcceptRequest.setBounds(420, 770, 161, 29);

        labelEnterprise.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        labelEnterprise.setForeground(new java.awt.Color(0, 102, 102));
        labelEnterprise.setText("CareTaker");
        add(labelEnterprise);
        labelEnterprise.setBounds(230, 310, 141, 25);

        labelValue.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        labelValue.setForeground(new java.awt.Color(0, 102, 102));
        labelValue.setText("<<Value>>");
        add(labelValue);
        labelValue.setBounds(440, 310, 250, 25);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("CareTaker Work Area");
        add(jLabel1);
        jLabel1.setBounds(130, 20, 410, 44);

        tableCaretakerWorkArea.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tableCaretakerWorkArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Doctor", "Patient", "Requested Date", "Accepted Date", "Status", "Doctor Instructions", "Patient Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableCaretakerWorkArea);

        add(jScrollPane1);
        jScrollPane1.setBounds(20, 360, 1570, 220);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Acknowledgement :");
        add(jLabel2);
        jLabel2.setBounds(261, 690, 170, 33);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/caretaker.jpg"))); // NOI18N
        add(jLabel3);
        jLabel3.setBounds(0, 0, 1600, 1200);
    }// </editor-fold>//GEN-END:initComponents

    
    private boolean commentsPatternCorrect(){
        Pattern pattern = Pattern.compile("^[A-Za-z0-9 _]*[A-Za-z0-9][A-Za-z0-9 _]*$");
        Matcher matcher = pattern.matcher(txtAreaComments.getText());
        
        boolean bool = matcher.matches();
        
        return bool;
    }
    
    private void btnAcceptRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAcceptRequestActionPerformed
        // TODO add your handling code here:
        String message = txtAreaComments.getText();
        
        if(!commentsPatternCorrect()){
            JOptionPane.showMessageDialog(null, "Comments should be alphanumeric");
        }  else {
            int row = tableCaretakerWorkArea.getSelectedRow();

            if (row < 0) {
                JOptionPane.showMessageDialog(null, "Please select a row");
                return;
            }
        
        
        DoctorByHospitalWorkRequest request = (DoctorByHospitalWorkRequest) tableCaretakerWorkArea.getValueAt(row,0);
//        request.setMessage(message);
        request.setStatus(message);
        request.setResolveDate(new Date());
        
        
        populateRequestTable();
        txtAreaComments.setText("");
        }  
    }//GEN-LAST:event_btnAcceptRequestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAcceptRequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelEnterprise;
    private javax.swing.JLabel labelValue;
    private javax.swing.JTable tableCaretakerWorkArea;
    private javax.swing.JTextArea txtAreaComments;
    // End of variables declaration//GEN-END:variables
}
