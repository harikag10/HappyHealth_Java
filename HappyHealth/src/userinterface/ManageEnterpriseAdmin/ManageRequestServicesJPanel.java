/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userinterface.ManageEnterpriseAdmin;



import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorByHospitalWorkRequest;
import Business.WorkQueue.PharmacyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.util.Rotation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author ikyathvarmadantuluri
 */
public class ManageRequestServicesJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageRequestServicesJPanel
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Network network;
    private UserAccount userAccount;
    private EcoSystem system;

    ManageRequestServicesJPanel(JPanel userProcessContainer, Enterprise enterprise, Network network, UserAccount userAccount, EcoSystem system) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.enterprise=enterprise;
        this.network=network;
        this.userAccount=userAccount;
        this.system=system;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBarChart = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(null);

        btnBarChart.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnBarChart.setForeground(new java.awt.Color(0, 102, 102));
        btnBarChart.setText("Pie Chart");
        btnBarChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarChartActionPerformed(evt);
            }
        });
        add(btnBarChart);
        btnBarChart.setBounds(340, 210, 160, 90);

        btnBack.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Back.PNG"))); // NOI18N
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack);
        btnBack.setBounds(12, 13, 70, 61);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Health Services.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1);
        jLabel1.setBounds(0, 0, 1600, 1200);
    }// </editor-fold>//GEN-END:initComponents

    private void btnBarChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarChartActionPerformed
        // TODO add your handling code here:
        int count=0;
        int count1=0;
        if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("Hospital")){
        for (WorkRequest request : system.getWorkQueue().getWorkRequestList()) {
            if (request.getActiveLead().equalsIgnoreCase("Doctor")) {
                count+=1;
            
            }
            else if (request.getActiveLead().equalsIgnoreCase("Staff")) {
               count1+=1;  
            }
        }
        
        System.out.println(count);
        System.out.println(count1);
        
        DefaultPieDataset result = new DefaultPieDataset();
        result.setValue("Request for doctors", count);
        result.setValue("Request by staff", count1);
        

        JFreeChart chart = ChartFactory.createPieChart3D(
                "Happy Health Services - Data Analysis(Number of requests)", // chart title
                result, // data
                true, // include legend
                true,
                true
        );

        PiePlot plot = (PiePlot) chart.getPlot();
        plot.setStartAngle(290);
        plot.setDirection(Rotation.CLOCKWISE);
        plot.setForegroundAlpha(0.5f);

        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(400, 500);

        }
        else if(enterprise.getEnterpriseType().getValue().equalsIgnoreCase("Pharmacy")){
            
            for (WorkRequest request : system.getWorkQueue().getWorkRequestList()) {
            if (request.getActiveLead().equalsIgnoreCase("Pharmacist")) {
                count+=1;
            
            }
            else if (request.getActiveLead().equalsIgnoreCase("Staff")) {
               count1+=1;  
            }
        }
        
        System.out.println(count);
        System.out.println(count1);
        
        DefaultPieDataset result = new DefaultPieDataset();
        result.setValue("Request by patients", count);
        result.setValue("Request by Staff", count1);
        

        JFreeChart chart = ChartFactory.createPieChart3D(
                "Happy Health Services - Data Analysis(Number of requests)", // chart title
                result, // data
                true, // include legend
                true,
                true
        );

        PiePlot plot = (PiePlot) chart.getPlot();
        plot.setStartAngle(290);
        plot.setDirection(Rotation.CLOCKWISE);
        plot.setForegroundAlpha(0.5f);

        ChartFrame frame = new ChartFrame("Pie Chart", chart);
        frame.setVisible(true);
        frame.setSize(400, 500);

        
        }
//        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
//        dataset.setValue(count, "Count", "Pharmacy");
//        dataset.setValue(count1,"Count","Hospital");
//        
//        JFreeChart chart = ChartFactory.createBarChart("Count","Name","count",dataset, PlotOrientation.VERTICAL, false, true,false);
//        CategoryPlot p = chart.getCategoryPlot();
//        p.setRangeGridlinePaint(Color.ORANGE);
//        ChartPanel panel = new ChartPanel(chart);
////        chart.removeAll();
//        panel.add(panel,BorderLayout.CENTER);
        
    }//GEN-LAST:event_btnBarChartActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBarChart;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
