/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctorByHospitalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mounica Dantuluri
 */
public class DoctorWorkAreaPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    private Network network;
    /**
     * Creates new form DoctorWorkAreaPanel
     */
    public DoctorWorkAreaPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise,EcoSystem system, Network network) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.system=system;
        this.network=network;
        labelValue.setText(userAccount.toString());
        populateRequestTable();
        
        btnRequestCaretaker.setEnabled(false);
        btnCancelRequest.setEnabled(false);
        txtAreaComments.setEnabled(false);
        btnAssign.setEnabled(false);
        

        
    }
        public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tableDoctorWorkArea.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest request : system.getWorkQueue().getWorkRequestList()){
//            System.out.println(request);
            if(request.getActiveLead().equalsIgnoreCase("Doctor") && enterprise.getEnterpriseType().getValue()==request.getEnterprise().getEnterpriseType().getValue() && network.getName().equalsIgnoreCase(request.getCity()) && (request.toString().equalsIgnoreCase(userAccount.getUsername()) || request.toString().equalsIgnoreCase("Waiting"))){
//                System.out.println(request);
            Object[] row = new Object[8];
            row[0] = request;
            row[1] = request.getInhomepatient().getAge();
            row[2]=  request.getInhomepatient().getSex();
            row[3]=  request.getInhomepatient().getPatientName();
            row[4] = request.getRequestDate();
            row[5] = request.getResolveDate();
            row[6] = request.getStatus();
            row[7] = request.getFollow();
           /* String result = ((StaffWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            */
            model.addRow(row);
             
        }
        
    }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableDoctorWorkArea = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaComments = new javax.swing.JTextArea();
        btnRequestCaretaker = new javax.swing.JButton();
        btnCancelRequest = new javax.swing.JButton();
        labelEnterprise = new javax.swing.JLabel();
        labelValue = new javax.swing.JLabel();
        btnAssign = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Doctor Work Area");
        add(jLabel1);
        jLabel1.setBounds(490, 10, 350, 44);

        tableDoctorWorkArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor", "Age", "Sex", "Requested By", "Requested Date", "Accepted Date", "Status", "Comments"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableDoctorWorkArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableDoctorWorkAreaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableDoctorWorkArea);

        add(jScrollPane1);
        jScrollPane1.setBounds(110, 420, 1400, 200);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Instructions to Caretaker :");
        add(jLabel2);
        jLabel2.setBounds(120, 680, 260, 33);

        txtAreaComments.setColumns(20);
        txtAreaComments.setForeground(new java.awt.Color(0, 102, 102));
        txtAreaComments.setRows(5);
        jScrollPane2.setViewportView(txtAreaComments);

        add(jScrollPane2);
        jScrollPane2.setBounds(480, 670, 248, 69);

        btnRequestCaretaker.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnRequestCaretaker.setForeground(new java.awt.Color(0, 102, 102));
        btnRequestCaretaker.setText("Request Caretaker");
        btnRequestCaretaker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestCaretakerActionPerformed(evt);
            }
        });
        add(btnRequestCaretaker);
        btnRequestCaretaker.setBounds(360, 780, 157, 29);

        btnCancelRequest.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnCancelRequest.setForeground(new java.awt.Color(0, 102, 102));
        btnCancelRequest.setText("Cancel Request");
        btnCancelRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelRequestActionPerformed(evt);
            }
        });
        add(btnCancelRequest);
        btnCancelRequest.setBounds(580, 780, 150, 29);

        labelEnterprise.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        labelEnterprise.setForeground(new java.awt.Color(0, 102, 102));
        labelEnterprise.setText("Doctor");
        add(labelEnterprise);
        labelEnterprise.setBounds(110, 100, 141, 25);

        labelValue.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        labelValue.setForeground(new java.awt.Color(0, 102, 102));
        labelValue.setText("<<Value>>");
        add(labelValue);
        labelValue.setBounds(270, 100, 250, 25);

        btnAssign.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnAssign.setForeground(new java.awt.Color(0, 102, 102));
        btnAssign.setText("Assign to Me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign);
        btnAssign.setBounds(120, 780, 150, 29);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Doctorslogin.jpg"))); // NOI18N
        add(jLabel3);
        jLabel3.setBounds(0, -110, 1620, 1420);
    }// </editor-fold>//GEN-END:initComponents
    
    private boolean commentsPatternCorrect(){
        Pattern pattern = Pattern.compile("^[A-Za-z0-9 _]*[A-Za-z0-9][A-Za-z0-9 _]*$");
        Matcher matcher = pattern.matcher(txtAreaComments.getText());
        
        boolean bool = matcher.matches();
        
        return bool;
    }
    
    private void btnRequestCaretakerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestCaretakerActionPerformed
        // TODO add your handling code here:
        String message = txtAreaComments.getText();
        if(!commentsPatternCorrect()){
            JOptionPane.showMessageDialog(null, "Comments should be alphanumeric");
            
        }
        else{
        int row = tableDoctorWorkArea.getSelectedRow();
        
        if (row < 0) {
                JOptionPane.showMessageDialog(null, "Please select a row");
                return;
            }

        DoctorByHospitalWorkRequest request = (DoctorByHospitalWorkRequest) tableDoctorWorkArea.getValueAt(row,0);
        request.setFollow(message);
        request.setSender(userAccount);
        request.setStatus("Doctor verification cleared and request is pending at Caretaker");
        request.setResolveDate(new Date());
        request.setActiveLead("Caretaker");

        
      populateRequestTable();
      txtAreaComments.setText("");
        }
    }//GEN-LAST:event_btnRequestCaretakerActionPerformed

    private void btnCancelRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelRequestActionPerformed
        // TODO add your handling code here:
        int row = tableDoctorWorkArea.getSelectedRow();
        WorkRequest request = (WorkRequest) tableDoctorWorkArea.getValueAt(row,0);
        system.getWorkQueue().getWorkRequestList().remove(request);
        populateRequestTable();
    }//GEN-LAST:event_btnCancelRequestActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int row = tableDoctorWorkArea.getSelectedRow();
        DoctorByHospitalWorkRequest request = (DoctorByHospitalWorkRequest) tableDoctorWorkArea.getValueAt(row,0);
//        request.setMessage(message);
//        request.setSender(userAccount);
        request.setStatus("Under Doctor Examination");
        request.setResolveDate(new Date());
//        request.setActiveLead("Caretaker");
        request.setdoctorName(userAccount.getUsername());
        populateRequestTable();
    }//GEN-LAST:event_btnAssignActionPerformed

    private void tableDoctorWorkAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableDoctorWorkAreaMouseClicked
        // TODO add your handling code here:
       int row = tableDoctorWorkArea.getSelectedRow();
        DoctorByHospitalWorkRequest request = (DoctorByHospitalWorkRequest) tableDoctorWorkArea.getValueAt(row,0);
        if(request.toString().equalsIgnoreCase("Waiting")){
            btnAssign.setEnabled(true);
            btnRequestCaretaker.setEnabled(false);
            btnCancelRequest.setEnabled(false);
            txtAreaComments.setEnabled(false);
        }
        else {
            btnRequestCaretaker.setEnabled(true);
        btnCancelRequest.setEnabled(true);
        txtAreaComments.setEnabled(true);
        btnAssign.setEnabled(false);
        } 
    }//GEN-LAST:event_tableDoctorWorkAreaMouseClicked
    
    private void tableDoctorWorkAreaActionPerformed(java.awt.event.ActionEvent evt) {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnCancelRequest;
    private javax.swing.JButton btnRequestCaretaker;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelEnterprise;
    private javax.swing.JLabel labelValue;
    private javax.swing.JTable tableDoctorWorkArea;
    private javax.swing.JTextArea txtAreaComments;
    // End of variables declaration//GEN-END:variables
}
