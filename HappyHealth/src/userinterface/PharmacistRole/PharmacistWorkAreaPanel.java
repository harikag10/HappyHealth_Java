/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.PharmacistRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.InHomePatient.InHomePatient;
import Business.Network.Network;
import Business.Organization.PharmacistOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.PharmacyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mounica Dantuluri
 */
public class PharmacistWorkAreaPanel extends javax.swing.JPanel {
    private JPanel userProcessContainer;
    private PharmacistOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private EcoSystem system;
    private InHomePatient inHomePatient;
    private Network network;
    /**
     * Creates new form PharmacistWorkAreaPanel
     */
    public PharmacistWorkAreaPanel(JPanel userProcessContainer, UserAccount account, PharmacistOrganization organization, Enterprise enterprise,Network network, EcoSystem system) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.system=system;
        this.inHomePatient=inHomePatient;
        this.network= network;
        
        labelValue.setText(userAccount.toString());
        populateRequestTable();
    }
            public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) tablePharmacistWorkArea.getModel();
        
        model.setRowCount(0);
        
        for (WorkRequest request : system.getWorkQueue().getWorkRequestList()){
            System.out.println("1"+request);
            System.out.println(request.getEnterprise());
            
            
            System.out.println(request.getActiveLead());
            if(enterprise.getEnterpriseType().getValue()==request.getEnterprise().getEnterpriseType().getValue() && (request.getActiveLead().equalsIgnoreCase("Pharmacist")||request.getActiveLead().equalsIgnoreCase("Staff")) && network.getName().equalsIgnoreCase(request.getCity())){
            Object[] row = new Object[6];
            row[0] = request;
            row[1] = request.getSender();
            row[2] = request.getRequestDate();
            row[3] = request.getResolveDate();
            row[4] = request.getStatus();
            row[5] = request.getMessage();
           /* String result = ((StaffWorkRequest) request).getTestResult();
            row[3] = result == null ? "Waiting" : result;
            */
            model.addRow(row);
            }
        
    }
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelEnterprise = new javax.swing.JLabel();
        labelValue = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePharmacistWorkArea = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAreaComments = new javax.swing.JTextArea();
        btnRequestDelivery = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 102, 102));
        setLayout(null);

        labelEnterprise.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        labelEnterprise.setForeground(new java.awt.Color(0, 102, 102));
        labelEnterprise.setText("Pharmacist");
        add(labelEnterprise);
        labelEnterprise.setBounds(290, 100, 141, 25);

        labelValue.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        labelValue.setForeground(new java.awt.Color(0, 102, 102));
        labelValue.setText("<<Value>>");
        add(labelValue);
        labelValue.setBounds(480, 100, 250, 25);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 40)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setText("Pharmacist Work Area");
        add(jLabel1);
        jLabel1.setBounds(558, 0, 410, 44);

        tablePharmacistWorkArea.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Request", "Sender", "Requested Date", "Accepted Date", "Status", "Comments"
            }
        ));
        jScrollPane1.setViewportView(tablePharmacistWorkArea);

        add(jScrollPane1);
        jScrollPane1.setBounds(150, 160, 753, 231);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("Comments:");
        add(jLabel2);
        jLabel2.setBounds(270, 420, 161, 33);

        txtAreaComments.setColumns(20);
        txtAreaComments.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        txtAreaComments.setForeground(new java.awt.Color(0, 102, 102));
        txtAreaComments.setRows(5);
        jScrollPane2.setViewportView(txtAreaComments);

        add(jScrollPane2);
        jScrollPane2.setBounds(450, 400, 248, 69);

        btnRequestDelivery.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnRequestDelivery.setForeground(new java.awt.Color(0, 102, 102));
        btnRequestDelivery.setText("Request Delivery Person");
        btnRequestDelivery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequestDeliveryActionPerformed(evt);
            }
        });
        add(btnRequestDelivery);
        btnRequestDelivery.setBounds(320, 570, 230, 25);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/Icons/Pharmacist.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        add(jLabel3);
        jLabel3.setBounds(-5, -4, 1600, 1100);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRequestDeliveryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequestDeliveryActionPerformed
        // TODO add your handling code here:
        String message = txtAreaComments.getText();

        int row = tablePharmacistWorkArea.getSelectedRow();
        if(row>=0){
        PharmacyWorkRequest request = (PharmacyWorkRequest) tablePharmacistWorkArea.getValueAt(row,0);
        request.setMessage(message);
        if(userAccount!=null){
            request.setSender(userAccount);
        }
        else if(inHomePatient!=null){
            request.setSender(inHomePatient);
        }
//        request.setStatus("Requested");
//        request.setRequestDate(new Date());
//        request.setResolveDate(null);
//        request.setExpectedDeliveryDate(null);
//        request.setActiveLead("Delivery");
//        request.setDrugQuantity(request.getDrugQuantity());
//      request.setStatus(message);
        request.setFollow("Packed");
        request.setResolveDate(new Date());
        request.setExpectedDeliveryDate(null);
        request.setActiveLead("Delivery");
        request.setDrugQuantity(request.getDrugQuantity());
        
        //        Organization org = null;
        //        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            //            if (organization instanceof CareTakerOrganization){
                //                org = organization;
                //                break;
                //            }
            //        }
        //        if (org!=null){
            //            org.getWorkQueue().getWorkRequestList().add(request);
            //            userAccount.getWorkQueue().getWorkRequestList().add(request);
            //        }

        populateRequestTable();
        txtAreaComments.setText("");
        }
        else{
            JOptionPane.showMessageDialog(null, "Please select a row to submit");
            return;
        }
    }//GEN-LAST:event_btnRequestDeliveryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRequestDelivery;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelEnterprise;
    private javax.swing.JLabel labelValue;
    private javax.swing.JTable tablePharmacistWorkArea;
    private javax.swing.JTextArea txtAreaComments;
    // End of variables declaration//GEN-END:variables
}
